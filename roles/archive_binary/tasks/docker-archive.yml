---
- debug:
    var: image

- name: "SET_FACTS"
  set_fact:
    docker_image:
      hostname: "{{ image.name }}"
      ports: "{{ image.ports if image.ports is defined else '' }}"
      id: "{{ image.prefix }}:{{ image.tag }}"
      binary: "{{ image.name }}-{{ image.tag }}.image.tar"

- block:
  - name: "Docker archive | Set DOCKER_IMAGE directory -> {{ reqs_dir }}"
    set_fact:
      archive_dir: "{{ reqs_dir }}"
      local: true

  - name: "Docker archive | Create binary directory"
    file:
      path: "{{ archive_dir }}"
      state: directory
  when: "'local' in inventory_hostname"

- name: "Docker archive | Set DOCKER_IMAGE directory -> /tmp"
  set_fact:
    archive_dir: "/tmp"
    local: false
  when: "not 'local' in inventory_hostname"

- name: "Check {{ docker_image.binary }} exists"
  stat:
    path: "{{ archive_dir }}/{{ docker_image.binary }}"
  register: binary

- name: "Fetch {{ docker_image.binary }}"
  synchronize:
    src: "{{ reqs_dir }}/{{ docker_image.binary }}"
    dest: "{{ archive_dir }}/{{ docker_image.binary }}"
    mode: push
  when:
  - not local
  - binary.stat.exists
  register: fetch

- name: "Load Check {{ docker_image.binary }} to docker images"
  docker_image:
    name: "{{ docker_image.id }}"
    load_path: "{{ archive_dir }}/{{ docker_image.binary }}"
  when: (binary.stat.exists | bool) or (fetch.changed | bool)

- name: "Archive {{ docker_image.binary }}"
  docker_image:
    name: "{{ docker_image.id }}"
    archive_path: "{{ reqs_dir }}/{{ docker_image.binary }}"
    pull: true
  when: local and (not binary.stat.exists | bool)
