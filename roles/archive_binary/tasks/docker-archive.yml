---
- name: "Set docker.tar dynamic dir to infra -> {{ inventory_hostname }}"
  set_fact:
    archive_dir: "{{ reqs_dir }}"
    local: true
  when: "hostvars[inventory_hostname]['ansible_default_ipv4']['address'] in hostvars[inventory_hostname]['ansible_host']"

- name: "Set docker.tar dynamic dir to external-> {{ inventory_hostname }}"
  set_fact:
    archive_dir: "/tmp"
    local: false
  when: "hostvars[inventory_hostname]['ansible_default_ipv4']['address'] not in hostvars[inventory_hostname]['ansible_host']"

- name: "Check {{ archive.name }}-docker.tar existance"
  stat:
    path: "{{ archive_dir }}/{{ archive.name }}-docker.tar"
  register: tar

- debug: var=tar
- debug: var=local
- debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']

- name: "Fetch container binaries"
  synchronize:
    src: "{{ reqs_dir }}/{{ archive.name }}-docker.tar"
    dest: "{{ archive_dir }}/{{ archive.name }}-docker.tar"
    mode: push
  when:
  - not local
  - tar.stat.exists
  register: fetch

- name: "Load Check {{ archive.name }}-docker.tar to docker images"
  docker_image:
    name: "{{ archive.image }}"
    load_path: "{{ archive_dir }}/{{ archive.name }}-docker.tar"
  when: (tar.stat.exists | bool) or (fetch.changed | bool)

- name: "Archive {{ archive.name }}"
  docker_image:
    name: "{{ archive.image }}"
    archive_path: "{{ reqs_dir }}/{{ archive.name }}-docker.tar"
    pull: true
  when: (local) and (not tar.stat.exists | bool)
