---
- name: "Initialize | Swarm Master"
  docker_swarm:
    state: present
    advertise_addr: "{{ advert_addr }}"
  register: swarm_init
  when:
  - master is defined
  - master

- name: "Initialize | Save swarm JoinTokens"
  delegate_to: local
  copy:
    content: |
      {{ item.value }}
    dest: /tmp/{{ item.key }}-join.token
  with_dict:
  - { "manager": "{{ swarm_init.swarm_facts.JoinTokens.Manager }}" }
  - { "worker": "{{ swarm_init.swarm_facts.JoinTokens.Worker }}" }
  when:
  - master is defined
  - master

- name: "Initialize | Load JoinTokens"
  set_fact:
    manager_token: "{{ lookup('file', '/tmp/manager-join.token') }}"
    worker_token: "{{ lookup('file', '/tmp/worker-join.token') }}"

- name: "Join | Managers"
  docker_swarm:
    state: join
    advertise_addr: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    join_token: "{{ manager_token }}"
    remote_addrs:
      - "{{ advert_addr }}"
  when:
  - manager is defined
  - manager

- name: "Join | Workers"
  docker_swarm:
    state: join
    advertise_addr: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    join_token: "{{ worker_token }}"
    remote_addrs:
      - "{{ advert_addr }}"
  when:
  - worker is defined
  - worker

- meta: end_play

- name: "Init swarm on first node"
  command: docker swarm init --advertise-addr {{ advert_addr }}
  register: new_swarm
  ignore_errors: true

- name: "Register worker token"
  shell: docker swarm join-token worker | grep token | awk '{print $5}'
  register: worker_token

- name: "Register manager token"
  shell: docker swarm join-token manager | grep token | awk '{print $5}'
  register: manager_token

- debug: msg="{{manager_token.stdout}}"
- debug: msg="{{worker_token.stdout}}"

- file: state=absent name={{item}}
  become: false
  delegate_to: localhost
  with_items:
    - "/tmp/manager.token"
    - "/tmp/worker.token"

- name: "Save worker token {{worker_token.stdout}}"
  delegate_to: localhost
  become: false
  lineinfile:
    state: present
    create: yes
    dest: "/tmp/worker.token"
    line: "{{worker_token.stdout}}"
  when: "{{worker_token}}"

- name: "Save manager token {{manager_token.stdout}}"
  delegate_to: localhost
  become: false
  lineinfile:
    state: present
    create: yes
    dest: "/tmp/manager.token"
    line: "{{manager_token.stdout}}"
  when: "{{manager_token}}"
