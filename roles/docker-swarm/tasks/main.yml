---
- name: "Initialize | Swarm Master"
  docker_swarm:
    state: present
    advertise_addr: "{{ advert_addr }}"
  register: swarm_init
  when:
  - master is defined
  - master
  # failed_when:
  # - "'This node is already part of a swarm' not in swarm_init.msg"
  # - swarm_init.failed

- name: Get swarm info
  docker_swarm:
    state: inspect
    remote_addrs: ['{{ ansible_host }}:2377']
  register: swarm_info
  when:
  - master is defined
  - master

- name: "Initialize | Save swarm JoinTokens"
  delegate_to: local
  copy:
    content: |
      {{ item.value }}
    dest: /tmp/{{ item.key }}-join.token
  with_dict:
  - { "manager": "{{ swarm_init.swarm_facts.JoinTokens.Manager }}" }
  - { "worker": "{{ swarm_init.swarm_facts.JoinTokens.Worker }}" }
  when:
  - master is defined
  - master

- name: "Initialize | Load JoinTokens"
  set_fact:
    manager_token: "{{ lookup('file', '/tmp/manager-join.token') }}"
    worker_token: "{{ lookup('file', '/tmp/worker-join.token') }}"

- name: "Join | Managers"
  docker_swarm:
    state: join
    advertise_addr: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    join_token: "{{ manager_token }}"
    remote_addrs:
      - "{{ advert_addr }}"
  when:
  - manager is defined
  - manager

- name: "Join | Workers"
  docker_swarm:
    state: join
    advertise_addr: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    join_token: "{{ worker_token }}"
    remote_addrs:
      - "{{ advert_addr }}"
  when:
  - worker is defined
  - worker

- name: "Run | Create overlay network"
  docker_network:
    name: "{{ docker_swarm_overlay.name }}"
    driver: overlay
    driver_options:
      com.docker.network.swarm.name: "{{ docker_swarm_overlay.name }}"
  when:
  - master is defined
  - master
